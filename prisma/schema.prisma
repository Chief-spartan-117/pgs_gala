// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  firstName      String
  lastName       String
  email          String           @unique
  rollNo         String           @unique
  faculty        String
  phoneNumber    String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  userEventRoles UserEventRoles[]

  @@map("User")
}

model Role {
  id             Int              @id @default(autoincrement())
  role           String           @default("User")
  userEventRoles UserEventRoles[]

  @@map("Role")
}

model Event {
  id             Int              @id @default(autoincrement())
  event          String
  eventStatus    EventStatus      @default(ACTIVE)
  entryStatus    EntryStatus      @default(FREE)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  userEventRoles UserEventRoles[]

  @@map("Event")
}

enum EventStatus {
  ACTIVE
  COMPLETED
  DELETED
}

enum EntryStatus {
  FREE
  PAID
}

model UserEventRoles {
  id                 Int                @id @default(autoincrement())
  userId             Int                @unique
  eventId            Int
  roleId             Int                @default(3)
  registrationDate   DateTime           @default(now())
  paymentSlip        String?
  paymentStatus      PaymentStatus      @default(NOT_PAID)
  registrationStatus RegistrationStatus @default(PENDING)
  twoFaVerified      Boolean            @default(false)
  twoFaVerifyKey     String?
  User               User               @relation(fields: [userId], references: [id])
  Role               Role               @relation(fields: [roleId], references: [id])
  Event              Event              @relation(fields: [eventId], references: [id])

  @@unique([userId, eventId, roleId])
}

enum RegistrationStatus {
  PENDING
  IN_PROGRESS
  ACTIVE
  ATTENDING
}

enum PaymentStatus {
  NOT_PAID
  PAID
}
